{"version":3,"sources":["components/js_files/square.js","components/js_files/ticTacToe.js","components/js_files/game.js","components/js_files/chooseTable.js","App.js","serviceWorker.js","index.js"],"names":["Square","props","className","onClick","value","TicTacToe","renderSquare","bind","i","this","squares","Component","Game","state","xIsNext","stepNumber","row","history","Array","fill","step","setState","slice","length","console","log","win","concat","lines","a","b","c","d","k","status","current","winner","Winner","moves","map","move","key","class","jumpTo","handleClick","chooseTable","handleSubmit","gaming","handleChange","event","target","name","whichPage","type","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.6a249a1b.chunk.js","sourcesContent":["import React from 'react'\nimport square from '../css_files/square.css'\nexport default function Square(props) {\n    return (\n        <button className=\"square\" onClick={props.onClick}>\n            {props.value}\n        </button>\n    )\n}","import React, { Component } from 'react';\nimport Square from './square'\n\nclass TicTacToe extends Component{\n  constructor(props) {\n    super(props);\n\n    this.renderSquare = this.renderSquare.bind(this);\n  }\n  renderSquare(i){\n    return <Square value={this.props.squares[i]}\n    onClick={()=>this.props.onClick(i)}\n    />\n}\n\nrender() {\n    return (\n        <div>\n            <div className=\"row\">\n                {this.renderSquare(0)} \n                {this.renderSquare(1)}\n                {this.renderSquare(2)}\n                {this.renderSquare(3)}\n            </div>\n            <div className=\"row\">\n                {this.renderSquare(4)}\n                {this.renderSquare(5)}\n                {this.renderSquare(6)}\n                {this.renderSquare(7)}\n            </div>\n            <div className=\"row\">\n                {this.renderSquare(8)}\n                {this.renderSquare(9)}\n                {this.renderSquare(10)}\n                {this.renderSquare(11)}\n            </div>\n            <div className=\"row\">\n                {this.renderSquare(12)}\n                {this.renderSquare(13)}\n                {this.renderSquare(14)}\n                {this.renderSquare(15)}\n            </div>\n        </div>\n    )\n    }\n}\nexport default TicTacToe","import React, { Component } from 'react'\nimport TicTacToe from './ticTacToe';\nimport '../css_files/game.css'\nimport Board from './ticTacToe';\n\nexport default class Game extends TicTacToe {\n    constructor(props) {\n        super(props);\n        this.state = {\n            xIsNext: true,\n            stepNumber: 0,\n            row: this.props.row,\n            history: [\n                { squares: Array(this.props.row * this.props.row).fill(null) }\n            ]\n        }\n    }\n    jumpTo(step) {\n        this.setState({\n            stepNumber: step,\n            xIsNext: true\n        })\n    }\n    handleClick(i) {\n        const history = this.state.history.slice(0, this.state.stepNumber + 1);\n        const current = history[history.length - 1];\n        const squares = current.squares.slice();\n        console.log(squares)\n        const winner = this.win(squares);\n        if (winner || squares[i]) {\n            return;\n        }\n        squares[i] = this.state.xIsNext ? 'X' : 'O';\n        this.setState({\n            history: history.concat({\n                squares: squares\n            }),\n            xIsNext: !this.state.xIsNext,\n            stepNumber: history.length\n        });\n        \n    }\n    Winner(squares) {\n        const lines = [\n            [0, 1, 2, 3],\n            [4, 5, 6, 7],\n            [8, 9, 10, 11],\n            [12, 13, 14, 15],\n            [0, 4, 8, 12],\n            [1, 5, 9, 13],\n            [2, 6, 10, 14],\n            [3, 7, 11, 15],\n            [0, 5, 10, 15],\n            [3, 6, 9, 12]\n        ];\n        for (let i = 0; i < lines.length; i++) {\n            const [a, b, c, d] = lines[i];\n            if (squares[a] && squares[a] === squares[b] && squares[b] === squares[c] && squares[c] === squares[d]) {\n                return squares[a];\n            }\n            \n        }\n    \n        return null;\n    }\n    win(squares){\n        for(let i=0;i<this.props.row;i++){   \n            for(let k=i*this.props.row;k<i*this.props.row+this.props.row;k++){\n                switch(this.props.row){\n                    case 2:\n                        return squares[k]===squares[k+1];\n                    case 3:\n                        return squares[k]===squares[k+1]&& squares[k+1]===squares[k+2]\n                    case 4:\n                        return squares[k]=== squares[k+1]&& squares[k+1]===squares[k+2]&& squares[k+2]===squares[k+3]\n                    default:\n                        return  null;\n                }            \n            } \n        }\n        return null;\n    }\n    render() {\n        const history = this.state.history;\n        const current = history[this.state.stepNumber];\n        const winner = this.Winner(current.squares);\n        const moves = history.map((step, move) => {\n            const desc = move ?null : 'Start the Game';\n            return (\n                <>\n                {move===0?<li className=\"goTo\" key={move}>\n                    <button class=\"playAgain\" onClick={() => { this.jumpTo(move) }}>\n                      ახლიდან დაწყება\n                    </button>\n                </li>:null}\n                </>\n            )\n        }\n        );\n        let status;\n        if (winner) {\n            status = 'გამარჯვებულია ' + winner;\n        }\n        else {\n            status = 'შემდეგი მოთამაშეა ' + (this.state.xIsNext ? 'X' : 'O');\n        }\n        return (\n            <div className=\"gameContainer\">\n                <div className=\"game\">\n                    <h1>Tic Tac Toe</h1>\n                    <div className=\"game-info\">\n                        <p>{status}</p>\n                    </div>\n                    <div className=\"game-board\">\n                        <Board row={this.props.row} onClick={(i) => this.handleClick(i)}\n                            squares={current.squares} />\n                    </div>\n                    <ul>{moves}</ul>\n                </div> </div>\n        )\n    }\n}\n\n","import React,{Component} from 'react'\nimport '../css_files/chooseTable.css'\nimport Game from './game'\nclass chooseTable extends Component{\n    constructor(props){\n        super(props);\n        this.state={\n            row:'',\n            gaming:false,\n        }\n    }\n    handleSubmit = () => {\n      this.setState({ gaming: !this.state.gaming });\n    }\n    handleChange = (event) => {\n        this.setState({\n          [event.target.name]: event.target.value\n        });\n      };\n    render(){\n        const whichPage=!this.state.gaming?\n\n   ( <div className=\"mainPage\" >\n    \n    <form >\n    <h1>Tic Tac Toe</h1>\n        <button  class=\"start\" type=\"submit\" value=\"Start\"  onClick={this.handleSubmit} >დაწყება</button>\n    </form>\n</div>)\n:\n  (<Game\n    row={this.state.row}\n  />)\n    return(<div>\n      {whichPage}</div>\n    );\n    }\n}\nexport default chooseTable","import React,{Component} from 'react';\nimport './App.css';\nimport ChooseTable from './components/js_files/chooseTable'\n\nclass App extends Component {\n  render(){\n    return (\n        <div className=\"App\">\n          <ChooseTable/>\n        </div>\n      \n    );\n}}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}